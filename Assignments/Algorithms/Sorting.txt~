#include <stdio.h>
int max=9;
int a[10] = { 2,5,7,3,1,4,8,9,6,10};
int b[10];

void merging(int low, int mid, int high)
{
   int l1, l2, i;
   for(l1 = low, l2 = mid + 1, i = low; l1 <= mid && l2 <= high; i++) 
   {
      if(a[l1] <= a[l2])
         b[i] = a[l1++];
      else
         b[i] = a[l2++];
   }
   
   while(l1 <= mid)    
      b[i++] = a[l1++];

   while(l2 <= high)   
      b[i++] = a[l2++];

   for(i = low; i <= high; i++)
      a[i] = b[i];
}

void sort(int low, int high) 
{
   int mid;
  
   if(low < high)
   {
      mid = (low + high) / 2;
      sort(low, mid);
      sort(mid+1, high);
      merging(low, mid, high);
   } 
   else 
   { 
      return;
   }   
}
int sumcheck(int A3[], int arr_size, int sum)
{
    int l, r;
    l = 0;
    r = arr_size-1; 
    while (l < r)
    {
         if(A3[l] + A3[r] == sum)
         {     printf("\nThe given number is the sum of %d and %d",A3[l], A3[r]); 
              l++;
              r--;
         }  
         else if((A3[l] + A3[r]) < sum)
              l++;
         else 
              r--;
    } 
    return 0;
}



int main() { 
   int i;
   int sizee=9;
   int summ=10;

   printf("List before sorting\n");
   
   for(i = 0; i <= max; i++)
      printf("%d ", a[i]);

   sort(0, max);

   printf("\nList after sorting\n");
   
   for(i = 0; i <= max; i++)
      printf("%d ", a[i]);
    sumcheck(a,sizee,summ);
}

